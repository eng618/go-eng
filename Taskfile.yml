version: '3'

tasks:
  build:
    desc: Build the project
    cmds:
      - task: root-build
      - task: circuit-breaker-build
      - task: master-slave-build
      - task: contexts-build
      - task: generics-build
      - task: web-service-gin-build

  lint:
    desc: Run linter for all modules
    cmds:
      - task: root-lint
      - task: circuit-breaker-lint
      - task: master-slave-lint
      - task: contexts-lint
      - task: generics-lint
      - task: web-service-gin-lint

  lint-fix:
    desc: Fix linting issues for all modules
    cmds:
      - task: root-lint-fix
      - task: circuit-breaker-lint-fix
      - task: master-slave-lint-fix
      - task: contexts-lint-fix
      - task: generics-lint-fix
      - task: web-service-gin-lint-fix

  test:
    desc: Run tests with race detection
    cmds:
      - task: root-test
      - task: circuit-breaker-test
      - task: master-slave-test
      - task: contexts-test
      - task: generics-test
      - task: web-service-gin-test

  bench:
    desc: Run benchmarks
    cmds:
      # - |
      #   CGO_ENABLED=1 go test ./... -bench=. | grep -E '^(=== RUN|PASS|FAIL|Benchmark|ok)'
      - task: root-bench
      - task: circuit-breaker-bench
      - task: master-slave-bench
      - task: contexts-bench
      - task: generics-bench
      - task: web-service-gin-bench

  validate:
    desc: Run lint, test, and build
    cmds:
      - task: lint
      - task: test
      - task: bench
      - task: build

  # -----------------------------------------------------------------------------
  # Release management
  # -----------------------------------------------------------------------------

  publish:
    desc: Run release and changelog tasks
    deps: [release, changelog]

  release:
    desc: Create a release
    cmds:
      - goreleaser release --clean --skip=publish

  changelog:
    desc: Update changelog
    cmds:
      - |
        git-chglog -o CHANGELOG.md && \
        git add --update && \
        git commit -m "chore: update changelog [skip ci]"

  # -----------------------------------------------------------------------------
  # Dependency management
  # -----------------------------------------------------------------------------

  tidy:
    desc: Run go mod tidy
    deps:
      [
        root-tidy,
        circuit-breaker-tidy,
        contexts-tidy,
        generics-tidy,
        master-slave-tidy,
        web-service-gin-tidy,
      ]

  deps-list:
    desc: List all dependencies
    cmds:
      - go list -m -u -mod=readonly all

  deps-upgrade:
    desc: Upgrade project dependencies
    deps:
      [
        root-update,
        contexts-update,
        generics-update,
        web-service-gin-update,
        circuit-breaker-update,
        master-slave-update,
      ]
    cmds:
      - go get -u -v ./...
      - go mod tidy

  deps-reset:
    desc: Reset dependencies
    cmds:
      - git checkout -- go.mod
      - go mod tidy

  deps-cleancache:
    desc: Clean Go mod cache
    cmds:
      - go clean -modcache

  list:
    desc: List all Go modules
    cmds:
      - go list -mod=mod all

  # -----------------------------------------------------------------------------
  # Root Module
  # -----------------------------------------------------------------------------

  root:
    desc: Run root module
    cmds:
      - go run main.go

  root-build:
    desc: Build root module
    cmds:
      - go build -v ./...

  root-lint:
    desc: Run linter for root module
    cmds:
      - golangci-lint run ./...

  root-lint-fix:
    desc: Fix linting issues for root module
    cmds:
      - golangci-lint run --fix ./...

  root-test:
    desc: Run tests for root module
    cmds:
      - CGO_ENABLED=1 go test ./... -cover -race -coverprofile=coverage.out -covermode=atomic

  root-bench:
    desc: Run benchmarks for root module
    cmds:
      - go test ./... -bench=. | grep -E '^(=== RUN|PASS|FAIL|Benchmark|ok)'

  root-tidy:
    desc: Run go mod tidy for root module
    cmds:
      - go mod tidy

  root-update:
    desc: Update root module dependencies
    cmds:
      - go get -u -v ./...
      - task: root-tidy

  # -----------------------------------------------------------------------------
  # Mod context
  # -----------------------------------------------------------------------------

  # contexts:
  #   desc: Run contexts module
  #   dir: examples/contexts
  #   cmds:
  #     - go run main.go

  contexts-lint:
    desc: Run linter for contexts module
    dir: examples/contexts
    cmds:
      - golangci-lint run ./...

  contexts-lint-fix:
    desc: Fix linting issues for contexts module
    dir: examples/contexts
    cmds:
      - golangci-lint run --fix ./...

  contexts-build:
    desc: Build contexts module
    dir: examples/contexts
    cmds:
      - go build -v ./...

  contexts-test:
    desc: Run tests for contexts module
    dir: examples/contexts
    cmds:
      - CGO_ENABLED=1 go test ./... -cover -race -coverprofile=coverage.out -covermode=atomic

  contexts-bench:
    desc: Run benchmarks for contexts module
    dir: examples/contexts
    cmds:
      - go test ./... -bench=. | grep -E '^(=== RUN|PASS|FAIL|Benchmark|ok)'

  contexts-tidy:
    desc: Run go mod tidy for examples/contexts module
    dir: examples/contexts
    cmds:
      - go mod tidy

  contexts-update:
    desc: Update examples/contexts module dependencies
    dir: examples/contexts
    cmds:
      - go get -u -v ./...
      - task: contexts-tidy

  # -----------------------------------------------------------------------------
  # Mod generics
  # -----------------------------------------------------------------------------

  generics:
    desc: Run generics module
    dir: examples/generics
    cmds:
      - go run main.go

  generics-build:
    desc: Build generics module
    dir: examples/generics
    cmds:
      - go build -v ./...

  generics-lint:
    desc: Run linter for generics module
    dir: examples/generics
    cmds:
      - golangci-lint run ./...

  generics-lint-fix:
    desc: Fix linting issues for generics module
    dir: examples/generics
    cmds:
      - golangci-lint run --fix ./...

  generics-test:
    desc: Run tests for generics module
    dir: examples/generics
    cmds:
      - CGO_ENABLED=1 go test ./... -cover -race -coverprofile=coverage.out -covermode=atomic

  generics-bench:
    desc: Run benchmarks for generics module
    dir: examples/generics
    cmds:
      - echo "TODO add benchmarks"
      # - go test ./... -bench=. | grep -E '^(=== RUN|PASS|FAIL|Benchmark|ok)'

  generics-tidy:
    desc: Run go mod tidy for examples/generics module
    dir: examples/generics
    cmds:
      - go mod tidy

  generics-update:
    desc: Update examples/generics module dependencies
    dir: examples/generics
    cmds:
      - go get -u -v ./...
      - task: generics-tidy

  # -----------------------------------------------------------------------------
  # Mod web-service-gin
  # -----------------------------------------------------------------------------

  web-service-gin:
    desc: Run web-service-gin module
    dir: examples/web-service-gin
    cmds:
      - go run main.go

  web-service-gin-build:
    desc: Build web-service-gin module
    dir: examples/web-service-gin
    cmds:
      - go build -v ./...

  web-service-gin-lint:
    desc: Run linter for web-service-gin module
    dir: examples/web-service-gin
    cmds:
      - golangci-lint run ./...

  web-service-gin-lint-fix:
    desc: Fix linting issues for web-service-gin module
    dir: examples/web-service-gin
    cmds:
      - golangci-lint run --fix ./...

  web-service-gin-test:
    desc: Run tests for web-service-gin module
    dir: examples/web-service-gin
    cmds:
      - CGO_ENABLED=1 go test ./... -cover -race -coverprofile=coverage.out -covermode=atomic

  web-service-gin-bench:
    desc: Run benchmarks for web-service-gin module
    dir: examples/web-service-gin
    cmds:
      - echo "TODO add benchmarks"
      # - go test ./... -bench=. | grep -E '^(=== RUN|PASS|FAIL|Benchmark|ok)'

  web-service-gin-tidy:
    desc: Run go mod tidy for examples/web-service-gin module
    dir: examples/web-service-gin
    cmds:
      - go mod tidy

  web-service-gin-update:
    desc: Update examples/web-service-gin module dependencies
    dir: examples/web-service-gin
    cmds:
      - go get -u -v ./...
      - task: web-service-gin-tidy

  # -----------------------------------------------------------------------------
  # Mod circuit-breaker
  # -----------------------------------------------------------------------------

  circuit-breaker:
    desc: Run circuit-breaker module
    dir: design-patterns/circuit-breaker
    cmds:
      - go run main.go

  circuit-breaker-build:
    desc: Build circuit-breaker module
    dir: design-patterns/circuit-breaker
    cmds:
      - go build -v ./...

  circuit-breaker-lint:
    desc: Run linter for circuit-breaker module
    dir: design-patterns/circuit-breaker
    cmds:
      - golangci-lint run ./...

  circuit-breaker-lint-fix:
    desc: Fix linting issues for circuit-breaker module
    dir: design-patterns/circuit-breaker
    cmds:
      - golangci-lint run --fix ./...

  circuit-breaker-test:
    desc: Run tests for circuit-breaker module
    dir: design-patterns/circuit-breaker
    cmds:
      - CGO_ENABLED=1 go test ./... -cover -race -coverprofile=coverage.out -covermode=atomic

  circuit-breaker-bench:
    desc: Run benchmarks for circuit-breaker module
    dir: design-patterns/circuit-breaker
    cmds:
      - go test ./... -bench=. | grep -E '^(=== RUN|PASS|FAIL|Benchmark|ok)'

  circuit-breaker-tidy:
    desc: Run go mod tidy for design-patterns/circuit-breaker module
    dir: design-patterns/circuit-breaker
    cmds:
      - go mod tidy

  circuit-breaker-update:
    desc: Update design-patterns/circuit-breaker module dependencies
    dir: design-patterns/circuit-breaker
    cmds:
      - go get -u -v ./...
      - task: circuit-breaker-tidy

  # -----------------------------------------------------------------------------
  # Mod master-slave
  # -----------------------------------------------------------------------------

  master-slave:
    desc: Run master-slave module
    dir: design-patterns/master-slave
    cmds:
      - go run main.go

  master-slave-build:
    desc: Build master-slave module
    dir: design-patterns/master-slave
    cmds:
      - go build -v ./...

  master-slave-lint:
    desc: Run linter for master-slave module
    dir: design-patterns/master-slave
    cmds:
      - golangci-lint run ./...

  master-slave-lint-fix:
    desc: Fix linting issues for master-slave module
    dir: design-patterns/master-slave
    cmds:
      - golangci-lint run --fix ./...

  master-slave-test:
    desc: Run tests for master-slave module
    dir: design-patterns/master-slave
    cmds:
      - CGO_ENABLED=1 go test ./... -cover -race -coverprofile=coverage.out -covermode=atomic

  master-slave-bench:
    desc: Run benchmarks for master-slave module
    dir: design-patterns/master-slave
    cmds:
      - go test ./... -bench=. | grep -E '^(=== RUN|PASS|FAIL|Benchmark|ok)'

  master-slave-tidy:
    desc: Run go mod tidy for design-patterns/master-slave module
    dir: design-patterns/master-slave
    cmds:
      - go mod tidy

  master-slave-update:
    desc: Update design-patterns/master-slave module dependencies
    dir: design-patterns/master-slave
    cmds:
      - go get -u -v ./...
      - task: master-slave-tidy
